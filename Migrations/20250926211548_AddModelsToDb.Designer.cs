// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Travel_Service.Data;

#nullable disable

namespace Travel_Service.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250926211548_AddModelsToDb")]
    partial class AddModelsToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Travel_Service.Models.Entity.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BookingId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FlightId")
                        .HasColumnType("integer");

                    b.Property<Guid>("FlightId1")
                        .HasColumnType("uuid");

                    b.Property<int>("PackageId")
                        .HasColumnType("integer");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<Guid>("RoomId1")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TravelPackagePackageId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserCustomerId")
                        .HasColumnType("uuid");

                    b.HasKey("BookingId");

                    b.HasIndex("FlightId1");

                    b.HasIndex("RoomId1");

                    b.HasIndex("TravelPackagePackageId");

                    b.HasIndex("UserCustomerId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Travel_Service.Models.Entity.Flight", b =>
                {
                    b.Property<Guid>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Airline")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ArrivalLocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Class")
                        .HasColumnType("integer");

                    b.Property<string>("DepartureLocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("TravelPackagesPackageId")
                        .HasColumnType("uuid");

                    b.HasKey("FlightId");

                    b.HasIndex("TravelPackagesPackageId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("Travel_Service.Models.Entity.Hotel", b =>
                {
                    b.Property<Guid>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("HotelLocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HotelName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("HotelId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("Travel_Service.Models.Entity.Room", b =>
                {
                    b.Property<Guid>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("HotelId")
                        .HasColumnType("integer");

                    b.Property<Guid>("HotelId1")
                        .HasColumnType("uuid");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RoomId");

                    b.HasIndex("HotelId1");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Travel_Service.Models.Entity.TravelPackages", b =>
                {
                    b.Property<Guid>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .HasColumnType("text");

                    b.Property<int?>("NoOfDays")
                        .HasColumnType("integer");

                    b.Property<string>("PackageClass")
                        .HasColumnType("text");

                    b.HasKey("PackageId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("Travel_Service.Models.Entity.User", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Travel_Service.Models.Entity.Booking", b =>
                {
                    b.HasOne("Travel_Service.Models.Entity.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Travel_Service.Models.Entity.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Travel_Service.Models.Entity.TravelPackages", "TravelPackage")
                        .WithMany()
                        .HasForeignKey("TravelPackagePackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Travel_Service.Models.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Room");

                    b.Navigation("TravelPackage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Travel_Service.Models.Entity.Flight", b =>
                {
                    b.HasOne("Travel_Service.Models.Entity.TravelPackages", null)
                        .WithMany("Flights")
                        .HasForeignKey("TravelPackagesPackageId");
                });

            modelBuilder.Entity("Travel_Service.Models.Entity.Room", b =>
                {
                    b.HasOne("Travel_Service.Models.Entity.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Travel_Service.Models.Entity.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Travel_Service.Models.Entity.TravelPackages", b =>
                {
                    b.Navigation("Flights");
                });
#pragma warning restore 612, 618
        }
    }
}
